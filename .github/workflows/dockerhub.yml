name: CI/CD to Docker Hun

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8
        env:
          MYSQL_ROOT_PASSWORD: rootpassword
          MYSQL_DATABASE: mydb
          MYSQL_USER: testuser
          MYSQL_PASSWORD: testpassword

        ports:
          - 3306:3306
        options: >-
          --health-cmd "mysqladmin ping --silent"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      
      - name: Set up Java21
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21
          cache: maven

      - name: Wait for MySQL
        run: |
          until mysql -h 127.0.0.1 -P 3306 -utestuser -ptestpassword -e "SELECT 1" mydb; do
            echo "⏳ Waiting for MySQL to be ready..."
            sleep 5
          done

      - name: Set DB environment variables
        run: |
          echo "SPRING_DATASOURCE_URL=jdbc:mysql://localhost:3306/mydb?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true" >> $GITHUB_ENV
          echo "SPRING_DATASOURCE_USERNAME=testuser" >> $GITHUB_ENV
          echo "SPRING_DATASOURCE_PASSWORD=testpassword" >> $GITHUB_ENV
          
      - name: Build project
        run: |
          if [-f ./mvnw ]; then
            ./mvnw clean package -DskipTests=false
          else
            mvn clean package -DskipTests=false
          fi
    
  docker:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/springbootsecurity-deveops:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/springbootsecurity-deveops:${{ github.sha }}
